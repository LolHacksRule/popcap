# -*- coding: utf-8 -*-
# -*- python -*-
# Author: Luo Jinghua

import os
import sys
import game
import configs

Import('env', 'gameenv')
paklib_env = env.Clone()
srcs = ['PakInterface.cpp', 'Find.cpp', 'FileSystem.cpp',
        'NativeFileSystem.cpp', 'ZipFileSystem.cpp', 'CritSect.cpp',
        'DriverFactory.cpp', 'FileSystemDriverFactory.cpp',
        'FileSystemManager.cpp']

configs.EnablePackage(paklib_env, 'zziplib')

if env['TARGET_PLATFORM'] == 'android':
    srcs += ['AndroidFileSystem.cpp']
    configs.EnablePackage(paklib_env, 'android')

if not env['static']:
    paklib_env.AppendUnique(CPPDEFINES = ['BUILDING_PAKLIB'],
                            LIBS = ['$STDCXX_LIBS'])
    paklib = paklib_env.SharedLibrary('PakLib', srcs)
    game.AddExtraInstallableObject(gameenv, paklib)
else:
    env.AppendUnique(CPPDEFINES = ['BUILDING_STATIC_PAKLIB'])
    gameenv.AppendUnique(CPPDEFINES = ['BUILDING_STTIC_PAKLIB'])
    paklib_env.AppendUnique(CPPDEFINES = ['BUILDING_STATIC_PAKLIB'])
    paklib = paklib_env.ConvenienceLibrary('PakLib', srcs)

### sdk
header_dir = os.path.join('$sdkdir', 'include', 'PakLib')
lib_dir = os.path.join('$sdkdir', 'lib')

paklib_sdk = env.Install (header_dir, 'PakInterface.h')
paklib_sdk += env.Install (lib_dir, paklib)

env.Alias ('paklib_sdk_install', paklib_sdk)
env.Alias ('sdk_install', paklib_sdk)

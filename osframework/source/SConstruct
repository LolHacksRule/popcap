# -*- coding: utf-8 -*-
# -*- python -*-
# Author: Luo Jinghua

import os
import sys
import SCons

### configurations
try:
  from Config import config
except Exception, e:
  config = 'configs'

modname = config
config = __import__ (modname)
modcomps = modname.split ('.')
for modcomp in modcomps[1:]:
  config = getattr (config, modcomp)

opts = Variables ('Config.py')

config.AddOptions (opts)

env = Environment (options = opts, ENV = os.environ,
                   tools = [ 'default', 'convlib', 'untar', 'archive',
                             'scanreplace', 'md5sum'])
config.Configure (env)
Help (opts.GenerateHelpText (env))

### dist directory
env['distdir'] = '#' + os.path.join(modname.replace('configs.', ''), 'dist')

### setup top builddir
if env['builddir']:
  builddir = os.path.join(modname.replace('configs.', ''), 'build')
else:
  builddir = ''

env['top_builddir'] = '#' + builddir

sexyenv = env.Clone ()
gameenv = env.Clone ()
gameenv['extras'] = []
gameenv['extras_objs'] = []
Export (['env', 'gameenv', 'sexyenv'])

sconscripts = [os.path.join ('ImageLib', 'SConscript')]
sconscripts += [os.path.join ('PakLib', 'SConscript')]
sconscripts += [os.path.join ('audiere', 'SConscript')]
sconscripts += [os.path.join ('freetype', 'SConscript')]

### otherdirs
otherdirs = env['otherdirs'].split(',')
for d in otherdirs:
  d = d.strip()
  if not d:
    continue
  sconscripts += [os.path.join (d, 'SConscript')]

sconscripts += [os.path.join ('SexyAppFramework', 'SConscript')]
sconscripts += [os.path.join ('demos', 'SConscript')]

def FindGames(path):
    result = []
    for root, dirs, files in os.walk(path):
      for f in files:
        if f == 'SConscript':
          result.append(os.path.join(root, f))
          print f
        else:
          print f
    return result

### find games in games directory
games = FindGames('games')
for game in games:
  if game not in sconscripts:
    sconscripts.append(game)

top_builddir = builddir
for sconscript in sconscripts:
  if env['builddir']:
    builddir = os.path.join (top_builddir, os.path.split(sconscript)[0])
    SConscript (sconscript, variant_dir = builddir, duplicate = False)
  else:
    SConscript (sconscript)

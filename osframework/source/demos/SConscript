# -*- coding: utf-8 -*-
# -*- python -*-
# Author: Luo Jinghua

import os
import sys
import game
import configs

srcdir = Dir('.')
if srcdir.srcdir:
    srcdir = srcdir.srcdir.abspath
else:
    srcdir = srcdir.abspath

Import('gameenv')

env = gameenv.Clone()
language = env['language']
env.PrependUnique(CPPPATH = ['#', '#SexyAppFramework'],
                  LIBPATH = [os.path.join ('..', 'SexyAppFramework'),
                             os.path.join ('..', 'PakLib'),
                             os.path.join ('..', 'ImageLib'),
                             os.path.join ('..', 'audiere', 'lib')],
                  LIBS = ['SexyAppFramework'])
env.Program('demo1', [os.path.join ('Demo1', 'Board.cpp'),
                      os.path.join ('Demo1', 'GameApp.cpp'),
                      os.path.join ('Demo1', 'main.cpp')])

env.Program('demo2', [os.path.join ('Demo2', 'Board.cpp'),
                      os.path.join ('Demo2', 'GameApp.cpp'),
                      os.path.join ('Demo2', 'main.cpp')])

env.Program('demo3', [os.path.join ('Demo3', 'Board.cpp'),
                      os.path.join ('Demo3', 'GameApp.cpp'),
                      os.path.join ('Demo3', 'main.cpp')])
env.Program('demo4', [os.path.join ('Demo4', 'Board.cpp'),
                      os.path.join ('Demo4', 'GameApp.cpp'),
                      os.path.join ('Demo4', 'TitleScreen.cpp'),
                      os.path.join ('Demo4', 'Res.cpp'),
                      os.path.join ('Demo4', 'main.cpp')])
env.Program('demo5', [os.path.join ('Demo5', 'Board.cpp'),
                      os.path.join ('Demo5', 'GameApp.cpp'),
                      os.path.join ('Demo5', 'DemoDialog.cpp'),
                      os.path.join ('Demo5', 'TitleScreen.cpp'),
                      os.path.join ('Demo5', 'Res.cpp'),
                      os.path.join ('Demo5', 'main.cpp')])
hungarr = env.Program('hungarr', [os.path.join ('Hun-garr', 'Board.cpp'),
                                  os.path.join ('Hun-garr', 'GameApp.cpp'),
                                  os.path.join ('Hun-garr', 'GameOverEffect.cpp'),
                                  os.path.join ('Hun-garr', 'LevelupEffect.cpp'),
                                  os.path.join ('Hun-garr', 'OptionsDialog.cpp'),
                                  os.path.join ('Hun-garr', 'TitleScreen.cpp'),
                                  os.path.join ('Hun-garr', 'Res.cpp'),
                                  os.path.join ('Hun-garr', 'main.cpp')],
                      CPPDEFINES = env['CPPDEFINES'] + [('SEXY_LANG', configs.QuoteStr(language))])

### install game hungarr
game_name = 'Hun-garr'
destdir = game.GetGameDistDir(env, game_name)

### install targets for hungarr
targets = []

### data
files = []
#files.append(os.path.join(srcdir, 'fonts'))
files.append(os.path.join(srcdir, 'images'))
files.append(os.path.join(srcdir, 'music'))
files.append(os.path.join(srcdir, 'sounds'))

### properties
files.append(os.path.join(srcdir, 'properties'))

### fonts
targets += env.Install(os.path.join(destdir, 'fonts'),
                       Glob(os.path.join(srcdir, 'fonts', '*.gif')) +
                       Glob(os.path.join(srcdir, 'fonts', '*.png')) +
                       Glob(os.path.join(srcdir, 'fonts', '*.txt')))
targets = game.InstallGame(env, game_name, hungarr, destdir, files, targets)

env.Alias('hungarr_install', targets)

SConscript(os.path.join('Hun-garr2', 'SConscript'))


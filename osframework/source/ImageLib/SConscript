# -*- coding: utf-8 -*-
# -*- python -*-
# Author: Luo Jinghua

import os
import sys
import game

Import('env', 'gameenv')
srcs = """./png/png.c
./png/pngerror.c
./png/pngget.c
./png/pngmem.c
./png/pngpread.c
./png/pngread.c
./png/pngrio.c
./png/pngrtran.c
./png/pngrutil.c
./png/pngset.c
./png/pngtrans.c
./png/pngvcrd.c
./png/pngwio.c
./png/pngwrite.c
./png/pngwtran.c
./png/pngwutil.c
./jpeg/cdjpeg.c
./jpeg/jcapimin.c
./jpeg/jcapistd.c
./jpeg/jccoefct.c
./jpeg/jccolor.c
./jpeg/jcdctmgr.c
./jpeg/jchuff.c
./jpeg/jcinit.c
./jpeg/jcmainct.c
./jpeg/jcmarker.c
./jpeg/jcmaster.c
./jpeg/jcomapi.c
./jpeg/jcparam.c
./jpeg/jcphuff.c
./jpeg/jcprepct.c
./jpeg/jcsample.c
./jpeg/jctrans.c
./jpeg/jdapimin.c
./jpeg/jdapistd.c
./jpeg/jdatadst.c
./jpeg/jdatasrc.c
./jpeg/jdcoefct.c
./jpeg/jdcolor.c
./jpeg/jddctmgr.c
./jpeg/jdhuff.c
./jpeg/jdinput.c
./jpeg/jdmainct.c
./jpeg/jdmarker.c
./jpeg/jdmaster.c
./jpeg/jdmerge.c
./jpeg/jdphuff.c
./jpeg/jdpostct.c
./jpeg/jdsample.c
./jpeg/jdtrans.c
./jpeg/jerror.c
./jpeg/jfdctflt.c
./jpeg/jfdctfst.c
./jpeg/jfdctint.c
./jpeg/jidctflt.c
./jpeg/jidctfst.c
./jpeg/jidctint.c
./jpeg/jidctred.c
./jpeg/jmemmgr.c
./jpeg/jmemnobs.c
./jpeg/jquant1.c
./jpeg/jquant2.c
./jpeg/jutils.c
./jpeg/rdbmp.c
./jpeg/rdcolmap.c
./jpeg/rdgif.c
./jpeg/rdppm.c
./jpeg/rdrle.c
./jpeg/rdswitch.c
./jpeg/rdtarga.c
./jpeg/transupp.c
./jpeg/wrbmp.c
./jpeg/wrgif.c
./jpeg/wrppm.c
./jpeg/wrrle.c
./jpeg/wrtarga.c""".split()
srcs += ['ImageLib.cpp']

imagelib_env = env.Clone()
imagelib_env.AppendUnique(LIBPATH = [os.path.join('$top_builddir', 'PakLib')],
                          LIBS = ['PakLib'])
if env['static']:
    env.AppendUnique(CPPDEFINES = ['BUILDING_STATIC_IMAGELIB'])
    gameenv.AppendUnique(CPPDEFINES = ['BUILDING_STATIC_IMAGELIB'])
    imagelib_env.AppendUnique(CPPDEFINES = ['BUILDING_STATIC_IMAGELIB'])
    imagelib = imagelib_env.ConvenienceLibrary('ImageLib', srcs)
else:
    imagelib_env.AppendUnique(CPPDEFINES = ['BUILDING_IMAGELIB'],
                              LIBS = ['$STDCXX_LIBS'])
    imagelib = imagelib_env.SharedLibrary('ImageLib', srcs)
    game.AddExtraInstallableObject(gameenv, imagelib)

### sdk
header_dir = os.path.join('$sdkdir', 'include', 'ImageLib')
lib_dir = os.path.join('$sdkdir', 'lib')

imagelib_sdk = env.Install (header_dir, 'ImageLib.h')
imagelib_sdk += env.Install (lib_dir, imagelib)

env.Alias ('imagelib_sdk_install', imagelib_sdk)
env.Alias ('sdk_install', imagelib_sdk)
